import { LogLevel } from "./LoggerLevel";
import { LoggerConfiguration } from "./LoggerConfig";
export declare type MessageBuilder = () => string;
export declare type Message = string | MessageBuilder;
export declare class Logger {
    readonly name: string;
    /** The logger configuration */
    static config: LoggerConfiguration;
    private static loggers;
    private static findLevel;
    /**
     * Get or create a logger
     * @param name the logger name
     */
    static getLogger(name: string): Logger;
    /** The current level */
    level: LogLevel;
    private constructor();
    /**
     * Dump an object
     */
    dump(obj: any): void;
    /**
     * Log a trace message
     * @param message the message
     * @param arg eventually an argument
     */
    trace(message: Message, arg?: any): void;
    /**
     * Log a debug message
     * @param message the message
     * @param arg eventually an argument
     */
    debug(message: Message, arg?: any): void;
    /**
     * Log an info message
     * @param message the message
     * @param arg eventually an argument
     */
    info(message: Message, arg?: any): void;
    /**
     * Log a warn message
     * @param message the message
     * @param arg eventually an argument
     */
    warn(message: Message, arg?: any): void;
    /**
     * Log an error message
     * @param message the message
     * @param arg eventually an argument
     */
    error(message: Message, arg?: any): void;
    private log;
}
