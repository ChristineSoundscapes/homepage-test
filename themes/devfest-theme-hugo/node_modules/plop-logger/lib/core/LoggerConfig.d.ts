/// <reference types="node" />
import { LoggerLevels, LogLevel } from "./LoggerLevel";
export interface LogEntry {
    level: LogLevel;
    now: Date;
    name: string;
    message: string;
    arg: any | null;
}
export interface LoggerAppender {
    log(entry: LogEntry): void;
    dump(obj: any): void;
}
export declare class ConsoleAppender implements LoggerAppender {
    private console;
    constructor(console: Console);
    formatLevel(level: LogLevel): string;
    formatDate(now: Date): string;
    formatName(name: string): string;
    formatMessage(message: string): string;
    formatArg(arg: any | null): string;
    formatDump(obj: any): string[];
    log(entry: LogEntry): void;
    dump(obj: any): void;
    private static levelToLogFunction;
}
export interface LoggerConfiguration {
    appender: LoggerAppender;
    defaultLevel: LogLevel;
    levels: LoggerLevels;
}
/**
 * The default configuration
 */
export declare const defaultConfig: LoggerConfiguration;
